"""retry outbound calls for campaigns

Revision ID: fefdd1835b7d
Revises: a75ae71af479
Create Date: 2025-08-06 13:37:54.151453

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fefdd1835b7d"
down_revision: Union[str, None] = "a75ae71af479"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "campaigns",
        sa.Column(
            "retry_config",
            sa.JSON(),
            nullable=False,
            server_default=sa.text(
                """'{\"enabled\": true, \"max_retries\": 2, \"retry_delay_seconds\": 120, \"retry_on_busy\": true, \"retry_on_no_answer\": true, \"retry_on_voicemail\": true}'::jsonb"""
            ),
        ),
    )
    op.add_column(
        "queued_runs",
        sa.Column(
            "retry_count", sa.Integer(), nullable=False, server_default=sa.text("0")
        ),
    )
    op.add_column(
        "queued_runs", sa.Column("parent_queued_run_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "queued_runs",
        sa.Column("scheduled_for", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column("queued_runs", sa.Column("retry_reason", sa.String(), nullable=True))
    op.drop_constraint("unique_campaign_source_uuid", "queued_runs", type_="unique")
    op.create_index(
        "idx_queued_runs_scheduled", "queued_runs", ["scheduled_for"], unique=False
    )
    op.create_unique_constraint(
        "unique_campaign_source_retry",
        "queued_runs",
        ["campaign_id", "source_uuid", "retry_count"],
    )
    op.create_foreign_key(
        None, "queued_runs", "queued_runs", ["parent_queued_run_id"], ["id"]
    )
    op.add_column(
        "workflow_runs", sa.Column("queued_run_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "workflow_runs", "queued_runs", ["queued_run_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "workflow_runs", type_="foreignkey")
    op.drop_column("workflow_runs", "queued_run_id")
    op.drop_constraint(None, "queued_runs", type_="foreignkey")
    op.drop_constraint("unique_campaign_source_retry", "queued_runs", type_="unique")
    op.drop_index("idx_queued_runs_scheduled", table_name="queued_runs")
    op.create_unique_constraint(
        "unique_campaign_source_uuid", "queued_runs", ["campaign_id", "source_uuid"]
    )
    op.drop_column("queued_runs", "retry_reason")
    op.drop_column("queued_runs", "scheduled_for")
    op.drop_column("queued_runs", "parent_queued_run_id")
    op.drop_column("queued_runs", "retry_count")
    op.drop_column("campaigns", "retry_config")
    # ### end Alembic commands ###
